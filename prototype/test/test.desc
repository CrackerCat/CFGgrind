load(0x100000dd0, 1, "pushq %rbp");
load(0x100000dd1, 3, "movq %rsp, %rbp");
load(0x100000dd4, 4, "movq %rdi, -0x8(%rbp)");
load(0x100000dd8, 4, "movq %rsi, -0x10(%rbp)");
load(0x100000ddc, 4, "movq -0x8(%rbp), %rsi");
load(0x100000de0, 2, "movl (%rsi), %eax");
load(0x100000de2, 3, "movl %eax, -0x14(%rbp)");
load(0x100000de5, 4, "movq -0x10(%rbp), %rsi");
load(0x100000de9, 2, "movl (%rsi), %eax");
load(0x100000deb, 4, "movq -0x8(%rbp), %rsi");
load(0x100000def, 2, "movl %eax, (%rsi)");
load(0x100000df1, 3, "movl -0x14(%rbp), %eax");
load(0x100000df4, 4, "movq -0x10(%rbp), %rsi");
load(0x100000df8, 2, "movl %eax, (%rsi)");
load(0x100000dfa, 1, "popq %rbp");
load(0x100000dfb, 1, "retq", return);
load(0x100000e00, 1, "pushq %rbp");
load(0x100000e01, 3, "movq %rsp, %rbp");
load(0x100000e04, 4, "subq $0x20, %rsp");
load(0x100000e08, 4, "movq %rdi, -0x8(%rbp)");
load(0x100000e0c, 3, "movl %esi, -0xc(%rbp)");
load(0x100000e0f, 7, "movl $0x0, -0x10(%rbp)");
load(0x100000e16, 3, "movl -0x10(%rbp), %eax");
load(0x100000e19, 3, "cmpl -0xc(%rbp), %eax");
load(0x100000e1c, 6, "jge 0x100000e9c", branch(0x100000e9c, 0x100000e22));
load(0x100000e22, 3, "movl -0x10(%rbp), %eax");
load(0x100000e25, 3, "addl $0x1, %eax");
load(0x100000e28, 3, "movl %eax, -0x14(%rbp)");
load(0x100000e2b, 3, "movl -0x14(%rbp), %eax");
load(0x100000e2e, 3, "cmpl -0xc(%rbp), %eax");
load(0x100000e31, 6, "jge 0x100000e89", branch(0x100000e89, 0x100000e37));
load(0x100000e37, 4, "movslq -0x14(%rbp), %rax");
load(0x100000e3b, 4, "movq -0x8(%rbp), %rcx");
load(0x100000e3f, 3, "movl (%rcx,%rax,4), %edx");
load(0x100000e42, 4, "movslq -0x10(%rbp), %rax");
load(0x100000e46, 4, "movq -0x8(%rbp), %rcx");
load(0x100000e4a, 3, "cmpl (%rcx,%rax,4), %edx");
load(0x100000e4d, 6, "jge 0x100000e76", branch(0x100000e76, 0x100000e53));
load(0x100000e53, 4, "movslq -0x10(%rbp), %rax");
load(0x100000e57, 4, "shlq $0x2, %rax");
load(0x100000e5b, 4, "addq -0x8(%rbp), %rax");
load(0x100000e5f, 4, "movslq -0x14(%rbp), %rcx");
load(0x100000e63, 4, "shlq $0x2, %rcx");
load(0x100000e67, 4, "addq -0x8(%rbp), %rcx");
load(0x100000e6b, 3, "movq %rax, %rdi");
load(0x100000e6e, 3, "movq %rcx, %rsi");
load(0x100000e71, 5, "callq _swap", call(0x100000dd0, 0x100000e76));
load(0x100000e76, 5, "jmp 0x100000e7b", jump(0x100000e7b));
load(0x100000e7b, 3, "movl -0x14(%rbp), %eax");
load(0x100000e7e, 3, "addl $0x1, %eax");
load(0x100000e81, 3, "movl %eax, -0x14(%rbp)");
load(0x100000e84, 5, "jmp 0x100000e2b", jump(0x100000e2b));
load(0x100000e89, 5, "jmp 0x100000e8e", jump(0x100000e8e));
load(0x100000e8e, 3, "movl -0x10(%rbp), %eax");
load(0x100000e91, 3, "addl $0x1, %eax");
load(0x100000e94, 3, "movl %eax, -0x10(%rbp)");
load(0x100000e97, 5, "jmp 0x100000e16", jump(0x100000e16));
load(0x100000e9c, 4, "addq $0x20, %rsp");
load(0x100000ea0, 1, "popq %rbp");
load(0x100000ea1, 1, "retq", return);
load(0x100000eb0, 1, "pushq %rbp");
load(0x100000eb1, 3, "movq %rsp, %rbp");
load(0x100000eb4, 4, "subq $0x20, %rsp");
load(0x100000eb8, 4, "movq %rdi, -0x8(%rbp)");
load(0x100000ebc, 3, "movl %esi, -0xc(%rbp)");
load(0x100000ebf, 7, "movl $0x0, -0x10(%rbp)");
load(0x100000ec6, 5, "movl $0x2, %eax");
load(0x100000ecb, 3, "movl -0x10(%rbp), %ecx");
load(0x100000ece, 3, "movl -0xc(%rbp), %edx");
load(0x100000ed1, 3, "movl %eax, -0x14(%rbp)");
load(0x100000ed4, 2, "movl %edx, %eax");
load(0x100000ed6, 1, "cltd");
load(0x100000ed7, 3, "movl -0x14(%rbp), %esi");
load(0x100000eda, 2, "idivl %esi");
load(0x100000edc, 2, "cmpl %eax, %ecx");
load(0x100000ede, 6, "jge 0x100000f1d", branch(0x100000f1d, 0x100000ee4));
load(0x100000ee4, 4, "movslq -0x10(%rbp), %rax");
load(0x100000ee8, 4, "shlq $0x2, %rax");
load(0x100000eec, 4, "addq -0x8(%rbp), %rax");
load(0x100000ef0, 3, "movl -0xc(%rbp), %ecx");
load(0x100000ef3, 3, "subl -0x10(%rbp), %ecx");
load(0x100000ef6, 3, "subl $0x1, %ecx");
load(0x100000ef9, 3, "movslq %ecx, %rdx");
load(0x100000efc, 4, "shlq $0x2, %rdx");
load(0x100000f00, 4, "addq -0x8(%rbp), %rdx");
load(0x100000f04, 3, "movq %rax, %rdi");
load(0x100000f07, 3, "movq %rdx, %rsi");
load(0x100000f0a, 5, "callq _swap", call(0x100000dd0, 0x100000f0f));
load(0x100000f0f, 3, "movl -0x10(%rbp), %eax");
load(0x100000f12, 3, "addl $0x1, %eax");
load(0x100000f15, 3, "movl %eax, -0x10(%rbp)");
load(0x100000f18, 5, "jmp 0x100000ec6", jump(0x100000ec6));
load(0x100000f1d, 4, "addq $0x20, %rsp");
load(0x100000f21, 1, "popq %rbp");
load(0x100000f22, 1, "retq", return);
load(0x100000f30, 1, "pushq %rbp");
load(0x100000f31, 3, "movq %rsp, %rbp");
load(0x100000f34, 4, "subq $0x40, %rsp");
load(0x100000f38, 4, "leaq -0x30(%rbp), %rax");
load(0x100000f3c, 7, "movl $0x0, -0x4(%rbp)");
load(0x100000f43, 3, "movl %edi, -0x8(%rbp)");
load(0x100000f46, 4, "movq %rsi, -0x10(%rbp)");
load(0x100000f4a, 7, "movq 0x4f(%rip), %rsi");
load(0x100000f51, 4, "movq %rsi, -0x30(%rbp)");
load(0x100000f55, 7, "movq 0x4c(%rip), %rsi");
load(0x100000f5c, 4, "movq %rsi, -0x28(%rbp)");
load(0x100000f60, 7, "movq 0x49(%rip), %rsi");
load(0x100000f67, 4, "movq %rsi, -0x20(%rbp)");
load(0x100000f6b, 7, "movl $0x6, -0x34(%rbp)");
load(0x100000f72, 3, "movl -0x34(%rbp), %esi");
load(0x100000f75, 3, "movq %rax, %rdi");
load(0x100000f78, 5, "callq _bubble", call(0x100000e00, 0x100000f7d));
load(0x100000f7d, 4, "leaq -0x30(%rbp), %rdi");
load(0x100000f81, 3, "movl -0x34(%rbp), %esi");
load(0x100000f84, 5, "callq _invert", call(0x100000eb0, 0x100000f89));
load(0x100000f89, 2, "xorl %eax, %eax");
load(0x100000f8b, 4, "addq $0x40, %rsp");
load(0x100000f8f, 1, "popq %rbp");
load(0x100000f90, 1, "retq", return);
exec(0x100000f30);
exec(0x100000e00);
exec(0x100000e22);
exec(0x100000e37);
exec(0x100000e76);
exec(0x100000e7b);
exec(0x100000e2b);
exec(0x100000e37);
exec(0x100000e53);
exec(0x100000dd0);
exec(0x100000e76);
exec(0x100000e7b);
exec(0x100000e2b);
exec(0x100000e89);
exec(0x100000e8e);
exec(0x100000e16);
exec(0x100000e9c);
exec(0x100000f7d);
exec(0x100000eb0);
exec(0x100000ee4);
exec(0x100000dd0);
exec(0x100000f0f);
exec(0x100000ec6);
exec(0x100000f1d);
exec(0x100000f89);
